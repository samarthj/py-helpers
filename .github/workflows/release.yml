name: Daily Release

on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.repository }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Get pip cache dir
        id: pip-cache-dir
        shell: bash
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Load pip cache
        id: pip-cache
        uses: actions/cache@main
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-pip-poetry-poe-semver
          restore-keys: |
            ${{ runner.os }}-pip-poetry-poe-semver
      - name: Install system dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install poetry poethepoet poetry-dynamic-versioning
      - name: Get poetry cache dir
        id: poetry-cache-dir
        shell: bash
        run: |
          echo "::set-output name=dir::$(poetry config cache-dir)"
      - name: Load poetry cache
        id: poetry-cache
        uses: actions/cache@main
        with:
          path: |
            ${{ steps.poetry-cache-dir.outputs.dir }}
            ./.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.PGP_PRIVATE_KEY }}
          git-user-signingkey: true
          git-commit-gpgsign: true

      - uses: samarthj/poetry-dynamic-release@main
        id: github_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          poetry-update: true
          git-username: Sam
          git-email: dev@samarthj.com
          git-gpg-email: dev@samarthj.com

      - name: Publish distribution ðŸ“¦ to Test PyPI
        id: test_pypi
        if: ${{ steps.github_release.outcome == 'success' }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
        continue-on-error: true

      - name: Publish distribution ðŸ“¦ to PyPI
        if: ${{ steps.test_pypi.outcome == 'success' }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
        continue-on-error: true
